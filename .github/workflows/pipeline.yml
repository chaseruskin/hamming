name: Pipeline
on: push

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
  ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16

jobs:
  Test:
    runs-on: ubuntu-latest
    container:
      image: chaseruskin/groovy-guitar
    steps:
      - name: Fetch repository
        uses: actions/checkout@v3
        
      - name: Install Cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install verb binary
        run: cargo install verb --git https://github.com/chaseruskin/verb --tag 0.1.0

      - name: Log all tool versions
        run: |
          orbit --version  
          python --version
          ghdl --version

      - name: Install model requirements
        run: |
          pip install -r mdl/requirements.txt

      - name: Test decoder
        run: |
          orbit test --dut decoder -- -g SIZE=8
          orbit test --dut decoder -- -g SIZE=5

#       - name: Simulate parity entity
#         run: |
#           orbit plan --clean --plugin ghdl --top parity
#           cat ./build/blueprint.tsv
#           orbit b -- -g SIZE=9 -g EVEN_PARITY=true
#           orbit b -- -g SIZE=4 -g EVEN_PARITY=false

#       - name: Simulate decoder entity
#         run: |
#           orbit plan --clean --plugin ghdl --top decoder
#           cat ./build/blueprint.tsv
# # orbit b
# # orbit b -- -g SIZE=4

#       - name: Simulate hamm_enc entity
#         run: |
#           orbit plan --clean --plugin ghdl --top hamm_enc
#           cat ./build/blueprint.tsv
# # orbit b
# # orbit b -- -g PARITY_BITS=4

#       - name: Simulate hamm_dec entity
#         run: |
#           orbit plan --clean --plugin ghdl --top hamm_dec
#           cat ./build/blueprint.tsv
# # orbit b
# # orbit b -- -g PARITY_BITS=6
# # orbit b -- -g PARITY_BITS=2

  Build:
    runs-on: ubuntu-latest
    container:
      image: chaseruskin/quiet-quartet
    steps:
      - name: Fetch repository
        uses: actions/checkout@v3

      - name: Log all tool versions
        run: |
          orbit --version  
          python --version
          quartus_sh --version

      - name: Configure orbit profile
        run: |
          git clone https://github.com/chaseruskin/orbit-targets.git "$(orbit env ORBIT_HOME)/targets/chaseruskin"
          pip install -r "$(orbit env ORBIT_HOME)/targets/chaseruskin/requirements.txt"
          orbit config --push include="targets/chaseruskin/config.toml"

      - name: Generate bitstream for encoder
        run: orbit build --target quartz --top decoder -- -g SIZE=4 --bit

      - name: Save reports
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: |
            build/quartus/*.summary
            build/quartus/*.rpt
            build/quartus/*.sof
            build/quartus/*.pof